use as seguintes tags no head
<head>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.5/dist/sweetalert2.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.5/dist/sweetalert2.all.min.js">
</head>

segue aqui alguns modelos prontos dos sweetalert2

-------Alerta para redirecionar Dashboards individuais

 Swal.fire(
  'Legal, vamos ver as dahsboards individuais!',
  'Estamos te redirecionando',
  'success'
)

-------- Alerta de erro 
Swal.fire({
  icon: 'error',
  title: 'Oops...',
  text: 'Parece que algo deu errado!!'
})

--------Alerta de sucesso
 Swal.fire(
  'Legal, solicitação realizada com sucesso!',
  'success'
)

-------Alerta insira os dados corretamente

Swal.fire(
  'Epa ?!',
  'preencha os dados corretamente',
  'question'
)

--------Alerta deseja salvar as alterações?

Swal.fire({
  title: 'Deseja salvar as alterações?',
  showDenyButton: true,
  showCancelButton: true,
  confirmButtonText: 'Save',
  denyButtonText: `Don't save`,
}).then((result) => {
  /* Read more about isConfirmed, isDenied below */
  if (result.isConfirmed) {
    Swal.fire('Salvo!', '', 'success')
  } else if (result.isDenied) {
    Swal.fire('As alterações não foram salvas!', '', 'error')
  }
})

--------- Alerta de alerta sem volta
Swal.fire({
  title: 'Você tem certeza desta alteração?',
  text: "Você não será capaz de reverter isso!",
  icon: 'warning',
  showCancelButton: true,
  confirmButtonColor: '#3085d6',
  cancelButtonColor: '#d33',
  confirmButtonText: 'Sim, apagar!'
}).then((result) => {
  if (result.isConfirmed) {
    Swal.fire(
      'Alteração salva!',
      'success'
    )
  }
})

--------- Alerta redirecionando

let timerInterval
Swal.fire({
  title: 'Estamos te redirecionando!',
  html: 'Sou fachado em  <b></b>  milliseconds.',
  timer: 2000,
  timerProgressBar: true,
  didOpen: () => {
    Swal.showLoading()
    const b = Swal.getHtmlContainer().querySelector('b')
    timerInterval = setInterval(() => {
      b.textContent = Swal.getTimerLeft()
    }, 100)
  },
  willClose: () => {
    clearInterval(timerInterval)
  }
}).then((result) => {
  /* Read more about handling dismissals below */
  if (result.dismiss === Swal.DismissReason.timer) {
    console.log('I was closed by the timer')
  }
})